# Nombre del workflow que aparecerá en GitHub Actions
name: Build & Push Docker Image

# Evento que dispara el workflow: push a la rama main
on:
  push:
    branches: [ main ] # Cambia a la rama que desees, por ejemplo 'main' o 'master'

jobs:
  # Definición del job principal llamado "docker"
  docker:
    runs-on: ubuntu-latest # El job se ejecuta en un runner de Ubuntu

    steps:
      # Paso 1: Clona el repositorio en el runner
      - uses: actions/checkout@v3

      # Paso 2: Configura Java 21 con Temurin
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Paso 3: Compila el proyecto con Maven, omitiendo los tests
      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: pnc-jpa-example-section-2 # PASO EXTRA PORQUE EL PROYECTO ESTÁ EN UN SUBDIRECTORIO

      # Paso 4: Inicia sesión en Docker Hub usando secretos
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Paso 5: Construye la imagen Docker con la etiqueta especificada
      - name: Build Docker image
        run: docker build -t andra55/demo-employees:latest .
        working-directory: pnc-jpa-example-section-2 # PASO EXTRA PORQUE EL PROYECTO ESTÁ EN UN SUBDIRECTORIO

      # Paso 6: Sube la imagen Docker a Docker Hub
      - name: Push Docker image
        run: docker push andra55/demo-employees:latest